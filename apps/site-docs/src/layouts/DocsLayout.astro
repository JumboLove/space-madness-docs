---
import BaseLayout from "./BaseLayout.astro";
import { getUrlForSanityType } from "@/lib/url";
import { getDocsNavItems } from "@/queries/docsNav";
import { Search } from "lucide-react";
const { posts, concepts, resources } = await getDocsNavItems();
---

<BaseLayout>
  {/* Pass through slot data to BaseLayout.astro */}
  <slot name="metadata" slot="metadata" />

  <aside
    id="default-sidebar"
    class="fixed bottom-0 left-0 top-0 z-40 w-64 -translate-x-full transition-transform sm:translate-x-0"
    aria-label="Sidebar"
    data-pagefind-ignore
  >
    <div class="h-full overflow-y-auto bg-gray-50 px-3 py-4 dark:bg-gray-800">
      <a href="/" class="site-title mb-4 block"
        ><h2 class="h2 gradient-text pb-0">Space Madness</h2></a
      >

      <div class="flex p-2">
        <button
          class="relative inline-flex h-9 w-full items-center justify-start rounded-[0.5rem] border border-slate-600 px-4 py-2 text-sm font-medium text-muted-foreground ring-offset-background transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50"
          id="site-search"
          ><span class="sr-only">Open Site Search</span><Search
            className="w-4 h-4"
          /><kbd
            class="pointer-events-none absolute right-1.5 hidden h-5 select-none items-center gap-1 rounded border bg-slate-700 px-1.5 font-mono text-[10px] font-medium opacity-100 sm:flex"
            >/</kbd
          ></button
        >
      </div>

      {
        posts && (
          <>
            <h3 class="text-md p-2 font-semibold tracking-wide">Guides</h3>
            <nav class="mb-10 space-y-1 text-sm">
              <a
                href="/docs"
                class="flex items-center rounded-md px-2 py-1 text-gray-900 hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700"
              >
                Getting Started
              </a>
              {posts.map((article) => {
                return (
                  <a
                    href={getUrlForSanityType("post", article.slug.current)}
                    class="flex items-center rounded-md px-2 py-1 text-gray-900 hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700"
                  >
                    {article.title}
                  </a>
                );
              })}
            </nav>
          </>
        )
      }

      {
        concepts && (
          <>
            <h3 class="text-md p-2 font-semibold tracking-wide">Concepts</h3>
            <nav class="mb-10 space-y-1 text-sm">
              {concepts.map((concept) => {
                return (
                  <a
                    href={getUrlForSanityType("concept", concept.slug.current)}
                    class="flex items-center rounded-md px-2 py-1 text-gray-900 hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700"
                  >
                    {concept.title}
                  </a>
                );
              })}
            </nav>
          </>
        )
      }

      {
        resources && (
          <>
            <h3 class="text-md p-2 font-semibold tracking-wide">Resources</h3>
            <nav class="space-y-1 text-sm">
              <a
                href="/docs/changelog"
                class="flex items-center rounded-md px-2 py-1 text-gray-900 hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700"
              >
                Changelog
              </a>

              {resources.map((resource) => {
                return (
                  <a
                    href={getUrlForSanityType(
                      "resource",
                      resource.slug.current,
                    )}
                    class="flex items-center rounded-md px-2 py-1 text-gray-900 hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700"
                  >
                    {resource.title}
                  </a>
                );
              })}
            </nav>
          </>
        )
      }
    </div>
  </aside>

  <div class="p-4 sm:ml-64">
    <slot />
  </div>

  <div class="fixed bottom-0 right-0 z-50 pb-8 pr-8" data-pagefind-ignore>
    <button
      class="menu-btn rounded-full p-3 text-slate-200 sm:hidden"
      data-drawer-target="default-sidebar"
      data-drawer-toggle="default-sidebar"
      aria-controls="default-sidebar"
    >
      <span class="sr-only">Open sidebar</span>
      <svg
        class="h-6 w-6"
        aria-hidden="true"
        fill="currentColor"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          clip-rule="evenodd"
          fill-rule="evenodd"
          d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z"
        ></path>
      </svg>
    </button>
  </div>

  <style>
    .gradient-text {
      --bg-size: 400%;
      /* Slightly lightened moonstone and fandango for legibility */
      --color-one: rgb(62, 212, 239);
      --color-two: rgb(218, 85, 196);
      background: linear-gradient(
          90deg,
          var(--color-one),
          var(--color-two),
          var(--color-one)
        )
        0 0 / var(--bg-size) 100%;
      color: transparent;
      -webkit-background-clip: text;
      background-clip: text;
    }

    .menu-btn {
      background-color: rgb(218, 85, 196);
    }
  </style>

  <script
    is:inline
    src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.6/flowbite.min.js"
  ></script>

  <script>
    function openSearch() {
      const event = new Event("openSearch");
      document.dispatchEvent(event);
    }

    const search = document.getElementById("site-search");
    search?.addEventListener("click", openSearch);
  </script>
</BaseLayout>
